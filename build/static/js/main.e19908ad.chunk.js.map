{"version":3,"sources":["assets/llanerologo.svg","Constants.js","store/actions/api.js","store/actions/actionTypes.js","components/Nav/Items/Item/Item.js","store/actions/auth.js","components/Nav/Items/Items.js","components/Logo/Logo.js","components/Nav/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/Nav/SideDrawer/Sidedrawer.js","containers/Layout.js","store/actions/modal.js","containers/Inventory/Inventory.js","containers/Orders/Orders.js","containers/History/History.js","components/Admin/Admin.js","components/Analytics/Analytics.js","components/Login/Login.js","routes.js","components/Articles/NewArticle.js","components/Articles/NewSell.js","components/Articles/NewStock.js","components/Articles/ListStock.js","components/Articles/Confirm.js","components/Articles/UpdateOrder.js","components/Articles/NewUser.js","components/Articles/index.js","components/Articles/Image.js","components/Articles/DeleteSale.js","components/Articles/TransferStock.js","components/Modal.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/modal.js","store/reducers/api.js","index.js"],"names":["module","exports","config","url","API_URL","TYPES","0","1","2","3","4","getDataList","id","token","collectionType","filter","pagination","order","orderType","console","log","dispatch","apiStart","requestConfig","headers","Authorization","queryParams","urlType","axios","get","then","res","apiSuccess","data","catch","error","apiFail","response","updateElement","operationType","articleID","payload","patch","updateFilter","type","updatePagination","updateOrder","dataType","getTotalSuccess","stockTotal","priceTotal","getEarningsSuccess","earnings","Item","styled","li","A","Link","NavigationItem","props","useDispatch","onClick","to","link","className","active","children","authSuccess","username","is_admin","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationDate","setTimeout","authCheckState","getItem","admin","undefined","Date","getTime","Navigation","ul","NavigationItems","useSelector","state","auth","desktop","style","color","height","width","padding","borderBottom","boxSizing","Logo","div","logo","marginBottom","margin","src","alt","Toolbar","header","Menu","toolbar","onToggle","SideDrawer","sidedrawer","open","Items","Header","Layout","Sider","Content","CustomLayout","sideDrawer","api","pageHeader","title","selectedTab","minHeight","breakpoint","theme","marginLeft","marginTop","mode","defaultSelectedKeys","key","UnorderedListOutlined","verticalAlign","FormOutlined","CalendarOutlined","BarChartOutlined","UsergroupAddOutlined","background","shape","float","marginRight","icon","UserOutlined","authActions","modalOpen","modalID","Inventory","React","useState","content","setContent","timeout","setTimeo","count","loading","stockPage","setStockPage","totalPrice","setPricePage","dataList","updated","dataListCopy","results","newContent","stock","price","map","doc","actions","quantity","modalActions","length","copyMercadolibreLink","locations","location","body","push","stock_list","reduce","sum","cost","stock_total","price_total","apiActions","el","document","createElement","value","appendChild","select","execCommand","removeChild","message","success","changeQueryParams","field","useEffect","Search","onChange","e","target","clearTimeout","dataSource","rowKey","paginate","filters","sorter","current","pageSize","total","overflow","Column","dataIndex","render","image","Orders","createdAt","created_at","getDate","getMonth","getFullYear","name","History","additional","article","gross","net","status","columns","Admin","date_joined","is_staff","pk","role","Analytics","setData","isUpdated","labels","datasets","label","backgroundColor","borderColor","borderWidth","Title","Paragraph","level","RangePicker","date","dateString","post","getEarnings","dateFrom","dateTo","gross_total","earnings_total","quantity_total","Login","size","onFinish","values","password","setItem","rules","required","prefix","placeholder","Password","LockOutlined","htmlType","block","BaseRouter","exact","path","component","ArticleForm","file","setFile","modal","beforeUpload","formatedData","optional_location","formData","FormData","append","set","encodeURI","layout","initialValues","min","max","step","formatter","replace","parser","valuePropName","getValueFromEvent","Array","isArray","fileList","multiple","UploadOutlined","NewSell","maxQuantity","setMaxQuantity","setQuantity","item","suggested_price","switch","formatedValues","createSale","createOrder","hasFeedback","val","Option","parseInt","NewStock","createStock","StockList","Confirm","newState","is_active","deleteArticle","UpdateOrder","Group","NewUser","createUser","extra","modalTypes","NewArticle","ListStock","Image","DeleteSale","checked","setChecked","returnStock","TransferStock","oposite","origin","destination","transferStock","MODAL_TYPES","5","6","Detail","7","8","9","10","11","CustomModal","isOpen","modalTitle","SelectedModal","top","visible","onCancel","footer","okText","cancelText","App","Modal","Boolean","window","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","authSucess","authLogout","reducer","modalClose","dataElement","toggleSideDrawer","apiUpdated","apiGetTotals","apiGetEarnings","resetOrderFilter","apiReducer","composeEnhaces","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","modalReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e19908ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/llanerologo.e30c99a4.svg\";","const prod = {\r\n  url: {\r\n    API_URL: \"https://llanero-managment.herokuapp.com\",\r\n  },\r\n};\r\n\r\nconst dev = {\r\n  url: {\r\n    API_URL: \"http://127.0.0.1:8000\",\r\n  },\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../../Constants\";\r\n\r\nconst TYPES = {\r\n  0: \"articles\",\r\n  1: \"stocks\",\r\n  2: \"orders\",\r\n  3: \"sales\",\r\n  4: \"users\",\r\n};\r\n\r\nexport const updated = () => {\r\n  return {\r\n    type: actionTypes.API_UPDATED,\r\n  };\r\n};\r\n\r\nexport const getDataList = (\r\n  id,\r\n  token,\r\n  collectionType,\r\n  filter,\r\n  pagination,\r\n  order,\r\n  orderType\r\n) => {\r\n  console.log(id, token, filter, order, orderType);\r\n  return (dispatch) => {\r\n    dispatch(apiStart());\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    let queryParams = \"\";\r\n    if (filter || pagination || order || orderType) {\r\n      // const queryParams = `${filter ? `search=${filter}` : \"\"}`;\r\n      queryParams = `${filter ? `search=${filter}&` : \"\"}${\r\n        pagination ? `page=${pagination}&` : \"\"\r\n      }${order ? `order=${order}` : \"\"}`;\r\n    }\r\n    const urlType = TYPES[collectionType];\r\n    const url =\r\n      id > 0\r\n        ? `${config.url.API_URL}/api/${urlType}/${id}/`\r\n        : `${config.url.API_URL}/api/${urlType}?${queryParams}`;\r\n    axios\r\n      .get(url, requestConfig)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (id) {\r\n          dispatch(apiSuccess(2, res.data));\r\n        } else {\r\n          dispatch(apiSuccess(1, res.data));\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createArticle = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: {\r\n        Authorization: `Token ${token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/articles/`, payload, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, 0));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createStock = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: {\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/stocks/`, payload, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, 0));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createSale = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: {\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/sales/`, payload, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, 0));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createOrder = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/orders/`, payload, requestConfig)\r\n      .then((res) => {\r\n        //dispatch(getDataList(2, token));\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createUser = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    axios\r\n      .post(\r\n        `${config.url.API_URL}/rest-auth/registration/`,\r\n        payload,\r\n        requestConfig\r\n      )\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, 4));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const transferStock = (payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/transfer_stock`, payload, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, 0));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateElement = (operationType, articleID, payload, token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    const urlType = TYPES[operationType];\r\n    axios\r\n      .patch(\r\n        `${config.url.API_URL}/api/${urlType}/${articleID}/`,\r\n        payload,\r\n        requestConfig\r\n      )\r\n      .then((res) => {\r\n        dispatch(getDataList(0, token, operationType));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const toggleSideDrawer = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE_SIDEDRAWER,\r\n  };\r\n};\r\n\r\nexport const updateFilter = (filter) => {\r\n  return {\r\n    type: actionTypes.UPDATE_FILTER,\r\n    filter,\r\n  };\r\n};\r\n\r\nexport const updatePagination = (pagination) => {\r\n  return {\r\n    type: actionTypes.UPDATE_PAGINATION,\r\n    pagination,\r\n  };\r\n};\r\n\r\nexport const updateOrder = (order) => {\r\n  return {\r\n    type: actionTypes.UPDATE_ORDER,\r\n    order,\r\n  };\r\n};\r\n\r\nexport const apiStart = () => {\r\n  return {\r\n    type: actionTypes.API_START,\r\n  };\r\n};\r\n\r\nexport const apiFail = (error) => {\r\n  return {\r\n    type: actionTypes.API_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const apiSuccess = (dataType, data) => {\r\n  return {\r\n    type: actionTypes.API_SUCCESS,\r\n    data: data,\r\n    dataType: dataType,\r\n  };\r\n};\r\n\r\nexport const getTotals = (token) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: { Authorization: `Token ${token}` },\r\n    };\r\n    axios\r\n      .get(`${config.url.API_URL}/api/getTotals`, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getTotalSuccess(res.data.stock_total, res.data.price_total));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getTotalSuccess = (stockTotal, priceTotal) => {\r\n  return {\r\n    type: actionTypes.API_GET_TOTALS,\r\n    stockTotal,\r\n    priceTotal,\r\n  };\r\n};\r\n\r\nexport const getEarnings = (token, payload) => {\r\n  return (dispatch) => {\r\n    const requestConfig = {\r\n      headers: {\r\n        Authorization: `Token ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .post(`${config.url.API_URL}/api/getEarnings`, payload, requestConfig)\r\n      .then((res) => {\r\n        dispatch(getEarningsSuccess(res.data));\r\n      })\r\n\r\n      .catch((error) => {\r\n        dispatch(apiFail(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getEarningsSuccess = (earnings) => {\r\n  return {\r\n    type: actionTypes.API_GET_EARNINGS,\r\n    earnings,\r\n  };\r\n};\r\n\r\nexport const resetOrderFilter = () => {\r\n  return {\r\n    type: actionTypes.RESET_ORDER_FILTER,\r\n  };\r\n};\r\n","//CYPRESS PARA TESTEAR EL FUNCIONAMIENTO DE LA PAGINA\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCESS = \"AUTH_SUCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const MODAL_OPEN = \"MODAL_OPEN\";\r\nexport const MODAL_CLOSE = \"MODAL_CLOSE\";\r\n\r\nexport const API_START = \"API_START\";\r\nexport const API_SUCCESS = \"API_SUCCESS\";\r\nexport const API_FAIL = \"API_FAIL\";\r\nexport const API_GET_TOTALS = \"API_GET_TOTALS\";\r\nexport const API_GET_EARNINGS = \"API_GET_EARNINGS\";\r\nexport const API_UPDATED = \"API_UPDATED\";\r\nexport const UPDATE_FILTER = \"UPDATE_FILTER\";\r\nexport const UPDATE_PAGINATION = \"UPDATE_PAGINATION\";\r\nexport const UPDATE_ORDER = \"UPDATE_ORDER\";\r\nexport const RESET_ORDER_FILTER = \"RESET_ORDER_FILTER\";\r\nexport const TOGGLE_SIDEDRAWER = \"TOGGLE_SIDEDRAWER\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as apiActions from \"../../../../store/actions/api\";\r\n\r\nconst Item = styled.li`\r\n  margin: 0;\r\n  display: flex;\r\n  height: 100%;\r\n  width: auto;\r\n  align-items: center;\r\n\r\n  @media (max-width: 500px) {\r\n    margin: 0;\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\nconst A = styled(Link)`\r\n    color: black;\r\n    text-decoration: none;\r\n    height: 100%;\r\n    padding: 16px 10px;\r\n    border-bottom: 4px solid transparent;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    :hover {\r\n      background-color: #1976d2;\r\n      color: #ffffff;\r\n    }\r\n    &.active {\r\n      background-color: #40A4C8;\r\n      border-bottom: 4px solid #40a4c8;\r\n    }\r\n  }\r\n  @media (max-width: 500px) {\r\n    color: black;\r\n    width: 100%;\r\n    display: block;\r\n    &.active {\r\n      color: #40A4C8;\r\n      background-color: white;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationItem = props => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Item>\r\n      <A\r\n        onClick={() => dispatch(apiActions.toggleSideDrawer())}\r\n        to={props.link}\r\n        className={props.active ? \"active\" : null}\r\n      >\r\n        {props.children}\r\n      </A>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../../Constants\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, username, is_admin) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCESS,\r\n    token: token,\r\n    username: username,\r\n    is_admin: is_admin,\r\n  };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"admin\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationDate) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationDate * 1000);\r\n  };\r\n};\r\n\r\nexport const authLogin = (username, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(`${config.url.API_URL}/rest-auth/login/`, {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        const token = res.data.key;\r\n        const expirationDate = new Date(new Date().getTime() + 36000 * 1000);\r\n        const requestConfig = {\r\n          headers: { Authorization: `Token ${token}` },\r\n        };\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        axios\r\n          .post(\r\n            `${config.url.API_URL}/api/getUser`,\r\n            {\r\n              token: token,\r\n            },\r\n            requestConfig\r\n          )\r\n          .then((res) => {\r\n            const admin = res.data.is_staff === true;\r\n            localStorage.setItem(\"username\", res.data.username);\r\n            localStorage.setItem(\"admin\", admin);\r\n            dispatch(authSuccess(token, res.data.username, admin));\r\n            dispatch(checkAuthTimeout(36000));\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Error \", error);\r\n            dispatch(authFail(error));\r\n          });\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(\"Error \", error);\r\n        dispatch(authFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(`${config.url.API_URL}/rest-auth/registration/`, {\r\n        username: username,\r\n        email: email,\r\n        password1: password1,\r\n        password2: password2,\r\n      })\r\n      .then((res) => {\r\n        const token = res.data.key;\r\n        const expirationDate = new Date(new Date().getTime() + 36000 * 1000);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"expirationDate\", expirationDate);\r\n        dispatch(authSuccess(token));\r\n        dispatch(checkAuthTimeout(36000));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"username\");\r\n    const admin = localStorage.getItem(\"admin\");\r\n    if (token === undefined) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const is_admin = admin === \"true\";\r\n        dispatch(authSuccess(token, username, is_admin));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Item from \"./Item/Item\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../store/actions/auth\";\r\n\r\nconst Navigation = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  @media (max-width: 500px) {\r\n    flex-flow: column;\r\n    &.desktopOnly {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavigationItems = (props) => {\r\n  const dispatch = useDispatch();\r\n  const admin = useSelector((state) => state.auth.admin);\r\n  return (\r\n    <Navigation className={props.desktop ? \"desktopOnly\" : null}>\r\n      <Item link=\"/\">Inventario</Item>\r\n      {admin ? (\r\n        <>\r\n          <Item link=\"/orders\">Pedidos</Item>\r\n          <Item link=\"/history\">Historial</Item>\r\n          <Item link=\"/analytics\">Estadisticas</Item>\r\n          <Item link=\"/admin\">Admin</Item>\r\n        </>\r\n      ) : null}\r\n      <a\r\n        onClick={() => dispatch(logout())}\r\n        style={{\r\n          color: \"black\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          padding: \"16px 10px\",\r\n          borderBottom: \"4px solid transparent\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        Salir\r\n      </a>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationItems;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport log from \"../../assets/llanerologo.svg\";\r\n\r\nconst Logo = styled.div`\r\n  background-color: trasparent;\r\n  padding: 8px;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n\r\n  img {\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst logo = props => (\r\n  <Logo style={{ height: props.height, marginBottom: props.margin }}>\r\n    <img src={log} alt=\"Llanero Sales, bikers like you\" />\r\n  </Logo>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navigation from \"../Items/Items\";\r\nimport Logo from \"../../Logo/Logo\";\r\n\r\nconst Toolbar = styled.header`\r\n  height: 56px;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  z-index: 90;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  width: 40px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  box-sizing: border-box;\r\n  div {\r\n    width: 90%;\r\n    height: 4px;\r\n    background-color: #1976d2;\r\n  }\r\n  @media (min-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst toolbar = props => (\r\n  <Toolbar className=\"responsiveNav\" onClick={props.onToggle}>\r\n    <Logo height=\"100%\" />\r\n    <Menu>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </Menu>\r\n    <Navigation desktop />\r\n  </Toolbar>\r\n);\r\n\r\nexport default toolbar;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  z-index: 2;\r\n`;\r\n\r\nconst BackDrop = props => {\r\n  useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"keyup\", handleKey);\r\n    // cleanup after unmount\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleKey);\r\n    };\r\n  }, []);\r\n\r\n  const handleKey = e => {\r\n    if (e.key === \"Escape\") {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  return <Container onClick={props.onClose} />;\r\n};\r\n\r\nexport default BackDrop;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport Items from \"../Items/Items\";\r\nimport Backdrop from \"../../Backdrop/Backdrop\";\r\n\r\nconst SideDrawer = styled.div`\r\n  position: fixed;\r\n  width: 280px;\r\n  max-width: 70%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 200;\r\n  background-color: white;\r\n  padding: 32px 16px;\r\n  box-sizing: border-box;\r\n  transition: transform 0.3s ease-out;\r\n  @media (min-width: 500px) {\r\n    display: none;\r\n  }\r\n  &.open {\r\n    transform: translateX(0);\r\n  }\r\n  &.close {\r\n    transform: translateX(-100%);\r\n  }\r\n`;\r\n\r\nconst sidedrawer = props => {\r\n  return (\r\n    <>\r\n      <SideDrawer className={props.open ? \"open\" : \"close\"}>\r\n        <Logo height=\"11%\" margin=\"20px\" />\r\n        <nav>\r\n          <Items />\r\n        </nav>\r\n      </SideDrawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default sidedrawer;\r\n","import React from \"react\";\r\nimport \"./layout.scss\";\r\nimport { Layout, Menu, Button } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  FormOutlined,\r\n  CalendarOutlined,\r\n  BarChartOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport logo from \"../assets/llanerologo.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Toolbar from \"../components/Nav/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../components/Nav/SideDrawer/Sidedrawer\";\r\nimport * as apiActions from \"../store/actions/api\";\r\nimport * as authActions from \"../store/actions/auth\";\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst CustomLayout = (props) => {\r\n  const sideDrawer = useSelector((state) => state.api.sideDrawer);\r\n  const pageHeader = useSelector((state) => state.api.title);\r\n  const admin = useSelector((state) => state.auth.admin);\r\n  const selectedTab = useSelector((state) => state.api.selectedTab);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Toolbar onToggle={() => dispatch(apiActions.toggleSideDrawer())} />\r\n      <SideDrawer open={sideDrawer} />\r\n      <Sider breakpoint=\"sm\" theme=\"light\" className=\"responsiveDrawer\">\r\n        <div>\r\n          <img\r\n            src={logo}\r\n            alt=\"Llanero Logo\"\r\n            className=\"logo\"\r\n            style={{\r\n              width: \"50%\",\r\n              marginLeft: \"25%\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n            }}\r\n          />\r\n        </div>\r\n        {admin ? (\r\n          <Menu mode=\"inline\" defaultSelectedKeys={[\"1\"]} theme=\"light\">\r\n            <Menu.Item\r\n              key=\"1\"\r\n              onClick={() => dispatch(apiActions.resetOrderFilter())}\r\n            >\r\n              <NavLink to=\"/\">\r\n                <UnorderedListOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Inventario</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              onClick={() => dispatch(apiActions.resetOrderFilter())}\r\n            >\r\n              <NavLink to=\"/orders\">\r\n                <FormOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Pedidos</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              onClick={() => dispatch(apiActions.resetOrderFilter())}\r\n            >\r\n              <NavLink to=\"/history\">\r\n                <CalendarOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Historial</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              onClick={() => dispatch(apiActions.resetOrderFilter())}\r\n            >\r\n              <NavLink to=\"/analytics\">\r\n                <BarChartOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Estadisticas</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              onClick={() => dispatch(apiActions.resetOrderFilter())}\r\n            >\r\n              <NavLink to=\"/admin\">\r\n                <UsergroupAddOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Admin</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu>\r\n        ) : (\r\n          <Menu mode=\"inline\" defaultSelectedKeys={[\"1\"]} theme=\"light\">\r\n            <Menu.Item key=\"1\">\r\n              <NavLink to=\"/\">\r\n                <UnorderedListOutlined style={{ verticalAlign: \"baseline\" }} />\r\n                <span>Inventario</span>\r\n              </NavLink>{\" \"}\r\n            </Menu.Item>{\" \"}\r\n          </Menu>\r\n        )}\r\n      </Sider>\r\n      <Layout>\r\n        <Header\r\n          style={{ background: \"#fff\", padding: 0 }}\r\n          className=\"responsiveHeader\"\r\n        >\r\n          <Button\r\n            shape=\"round\"\r\n            style={{\r\n              float: \"right\",\r\n              marginTop: \"16px\",\r\n              marginRight: \"16px\",\r\n            }}\r\n            icon={<UserOutlined style={{ verticalAlign: \"baseline\" }} />}\r\n            onClick={() => dispatch(authActions.logout())}\r\n          >\r\n            Salir\r\n          </Button>\r\n          {pageHeader ? pageHeader : \"\"}\r\n        </Header>\r\n        <Content className=\"responsiveContent\" style={{ padding: \"24px\" }}>\r\n          {props.children}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CustomLayout;\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const modalOpen = (id, payload=null) => {\r\n  return {\r\n    type: actionTypes.MODAL_OPEN,\r\n    modalID: id,\r\n    payload: payload\r\n  }\r\n}\r\n\r\nexport const modalClose = () => {\r\n  return {\r\n    type: actionTypes.MODAL_CLOSE,\r\n  }\r\n}","import React from \"react\";\r\nimport { Table, Input, message } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as modalActions from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\nimport \"../../components/Table.scss\";\r\nimport \"./inventory.css\";\r\n\r\nconst Inventory = (props) => {\r\n  const [content, setContent] = React.useState([]);\r\n  const [timeout, setTimeo] = React.useState(null);\r\n  const filter = useSelector((state) => state.api.filter);\r\n  const pagination = useSelector((state) => state.api.pagination);\r\n  const order = useSelector((state) => state.api.order);\r\n  const count = useSelector((state) => state.api.count);\r\n  const loading = useSelector((state) => state.api.loading);\r\n  const stockTotal = useSelector((state) => state.api.stockTotal);\r\n  const priceTotal = useSelector((state) => state.api.priceTotal);\r\n  const [stockPage, setStockPage] = React.useState(0);\r\n  const [totalPrice, setPricePage] = React.useState(0.0);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const updated = useSelector((state) => state.api.updated);\r\n  const admin = useSelector((state) => state.auth.admin);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList && updated) {\r\n    const dataListCopy = [...dataList.results];\r\n    let newContent = [];\r\n    let stock = 0,\r\n      price = 0;\r\n    dataListCopy.map((doc, key) => {\r\n      const actions = (\r\n        <div className=\"actionContainer\">\r\n          {doc.quantity > 0 ? (\r\n            <div\r\n              className=\"actionBtn\"\r\n              onClick={() =>\r\n                dispatch(modalActions.modalOpen(2, { key, id: doc.id }))\r\n              }\r\n            >\r\n              <span>Vender articulo</span>\r\n              <i className=\"material-icons\">add_shopping_cart</i>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() =>\r\n              dispatch(modalActions.modalOpen(3, { key, id: doc.id }))\r\n            }\r\n          >\r\n            <span>Agregar stock</span>\r\n            <i className=\"material-icons\">note_add</i>\r\n          </div>\r\n\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() =>\r\n              dispatch(modalActions.modalOpen(1, { key, id: doc.id }))\r\n            }\r\n          >\r\n            <span>Editar articulo</span>\r\n            <i className=\"material-icons\">edit</i>\r\n          </div>\r\n\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() => dispatch(modalActions.modalOpen(4, key))}\r\n          >\r\n            <span>Detalle stock</span>\r\n            <i className=\"material-icons\">calendar_today</i>\r\n          </div>\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() =>\r\n              dispatch(modalActions.modalOpen(11, { key, id: doc.id }))\r\n            }\r\n          >\r\n            <span>Transferir stock</span>\r\n            <i className=\"material-icons\">transform</i>\r\n          </div>\r\n          {doc.link.length > 1 ? (\r\n            <div\r\n              className=\"actionBtn\"\r\n              onClick={() => copyMercadolibreLink(doc.link)}\r\n            >\r\n              <span>Copiar link de MercadoLibre</span>\r\n              <i className=\"material-icons\">link</i>\r\n            </div>\r\n          ) : null}\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() =>\r\n              dispatch(modalActions.modalOpen(5, { id: doc.id, type: 0 }))\r\n            }\r\n          >\r\n            <span>Borrar articulo</span>\r\n            <i className=\"material-icons\">cancel</i>\r\n          </div>\r\n        </div>\r\n      );\r\n      const locations = `${doc.location[0].body} ${doc.location[0].quantity} - ${doc.location[1].body} ${doc.location[1].quantity}`;\r\n      const data = {\r\n        ...doc,\r\n        actions,\r\n        locations,\r\n      };\r\n      newContent.push(data);\r\n      stock += doc.quantity;\r\n      price += doc.stock_list.reduce(\r\n        (sum, { quantity, cost }) => sum + quantity * cost,\r\n        0\r\n      );\r\n    });\r\n    setContent(newContent);\r\n    setStockPage(stock);\r\n    setPricePage(price);\r\n    dispatch(apiActions.getTotals(token));\r\n    dispatch(apiActions.updated());\r\n  }\r\n\r\n  const copyMercadolibreLink = (link) => {\r\n    const el = document.createElement(\"textarea\");\r\n    el.value = link;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(el);\r\n    message.success(\"El link ha sido copiado exitosamente!\", 2);\r\n  };\r\n\r\n  const onSearchChanged = (value) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    setTimeo(\r\n      setTimeout(\r\n        function (value) {\r\n          changeQueryParams(\"search\", value);\r\n        },\r\n        1500,\r\n        value\r\n      )\r\n    );\r\n  };\r\n\r\n  const changeQueryParams = (field, value) => {\r\n    switch (field) {\r\n      case \"search\":\r\n        dispatch(apiActions.updateFilter(value));\r\n        break;\r\n      case \"pagination\":\r\n        dispatch(apiActions.updatePagination(value));\r\n        break;\r\n      case \"order\":\r\n        dispatch(apiActions.updateOrder(value));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(apiActions.getDataList(0, token, 0, filter, pagination, order));\r\n  }, [filter, pagination, order]);\r\n\r\n  const handleTableChange = (paginate, filters, sorter) => {\r\n    if (pagination !== paginate.current) {\r\n      changeQueryParams(\"pagination\", paginate.current);\r\n    } else {\r\n      const order = `${sorter.order === \"descend\" ? \"-\" : \"\"}${sorter.field}`;\r\n      changeQueryParams(\"order\", order);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input.Search onChange={(e) => onSearchChanged(e.target.value)} />\r\n      <Table\r\n        dataSource={content} //Table content>\r\n        rowKey=\"id\"\r\n        onChange={handleTableChange}\r\n        pagination={{ pageSize: 20, total: count }}\r\n        style={{ overflow: \"auto\" }}\r\n        loading={loading}\r\n      >\r\n        <Table.Column\r\n          title=\"Nombre\"\r\n          dataIndex=\"name\"\r\n          key=\"name\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column title=\"SKU\" dataIndex=\"sku\" key=\"sku\" sorter={true} />\r\n        <Table.Column title=\"Ubicacion\" dataIndex=\"locations\" key=\"locations\" />\r\n        {admin ? (\r\n          <Table.Column title=\"Costo\" dataIndex=\"cost\" key=\"cost\" />\r\n        ) : null}\r\n        <Table.Column\r\n          title=\"Precio\"\r\n          dataIndex=\"suggested_price\"\r\n          key=\"suggested_price\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column title=\"Stock\" dataIndex=\"quantity\" key=\"quantity\" />\r\n        <Table.Column\r\n          title=\"Imagen\"\r\n          dataIndex=\"image\"\r\n          key=\"image\"\r\n          render={(image) => (\r\n            <img\r\n              src={image}\r\n              width=\"64px\"\r\n              onClick={() => dispatch(modalActions.modalOpen(7, image))}\r\n            />\r\n          )}\r\n        />\r\n        {admin ? (\r\n          <Table.Column title=\"Acciones\" dataIndex=\"actions\" key=\"actions\" />\r\n        ) : null}\r\n      </Table>\r\n      {admin ? (\r\n        <div>\r\n          Stock total: {stockPage} / {stockTotal}\r\n        </div>\r\n      ) : null}\r\n      {admin ? (\r\n        <div>\r\n          Precio total: ${totalPrice} / ${priceTotal}\r\n        </div>\r\n      ) : null}\r\n      {admin ? (\r\n        <span\r\n          onClick={() => dispatch(modalActions.modalOpen(1))}\r\n          className=\"floatingBtn\"\r\n        >\r\n          +\r\n        </span>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from \"react\";\r\nimport { Table, Input, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport * as modalActions from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\nimport \"./orders.scss\";\r\n\r\nconst Orders = (props) => {\r\n  const [content, setContent] = React.useState([]);\r\n  const [timeout, setTimeo] = React.useState(null);\r\n  const filter = useSelector((state) => state.api.filter);\r\n  const pagination = useSelector((state) => state.api.pagination);\r\n  const order = useSelector((state) => state.api.order);\r\n  const count = useSelector((state) => state.api.count);\r\n  const loading = useSelector((state) => state.api.loading);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const updated = useSelector((state) => state.api.updated);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList && updated) {\r\n    const dataListCopy = [...dataList.results];\r\n    let newContent = [];\r\n    dataListCopy.map((doc, key) => {\r\n      const createdAt = new Date(doc.created_at);\r\n      const created_at = `${createdAt.getDate()}/${\r\n        createdAt.getMonth() + 1\r\n      }/${createdAt.getFullYear()}`;\r\n      const actions = (\r\n        <div className=\"actionContainer\">\r\n          <div\r\n            className=\"actionBtn\"\r\n            onClick={() =>\r\n              dispatch(\r\n                modalActions.modalOpen(8, {\r\n                  id: doc.id,\r\n                  name: doc.name,\r\n                  state: doc.state,\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <span>Cambiar estado</span>\r\n            <i className=\"material-icons\">edit</i>\r\n          </div>\r\n        </div>\r\n      );\r\n      delete doc.created_at;\r\n      const data = {\r\n        ...doc,\r\n        actions,\r\n        created_at,\r\n      };\r\n      newContent.push(data);\r\n    });\r\n    setContent(newContent);\r\n    dispatch(apiActions.updated());\r\n  }\r\n\r\n  const onSearchChanged = (value) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    setTimeo(\r\n      setTimeout(\r\n        function (value) {\r\n          changeQueryParams(\"search\", value);\r\n        },\r\n        1500,\r\n        value\r\n      )\r\n    );\r\n  };\r\n\r\n  const changeQueryParams = (field, value) => {\r\n    switch (field) {\r\n      case \"search\":\r\n        dispatch(apiActions.updateFilter(value));\r\n        break;\r\n      case \"pagination\":\r\n        dispatch(apiActions.updatePagination(value));\r\n        break;\r\n      case \"order\":\r\n        dispatch(apiActions.updateOrder(value));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(apiActions.getDataList(0, token, 2, filter, pagination, order));\r\n  }, [filter, pagination, order]);\r\n\r\n  const handleTableChange = (paginate, filters, sorter) => {\r\n    if (pagination !== paginate.current) {\r\n      changeQueryParams(\"pagination\", paginate.current);\r\n    } else {\r\n      const order = `${sorter.order === \"descend\" ? \"-\" : \"\"}${sorter.field}`;\r\n      changeQueryParams(\"order\", order);\r\n    }\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(\r\n        `selectedRowKeys: ${selectedRowKeys}`,\r\n        \"selectedRows: \",\r\n        selectedRows\r\n      );\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === \"Disabled User\", // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input.Search onChange={(e) => onSearchChanged(e.target.value)} />\r\n      <Table\r\n        dataSource={content} //Table content>\r\n        rowKey=\"id\"\r\n        onChange={handleTableChange}\r\n        pagination={{ pageSize: 20, total: count }}\r\n        style={{ overflow: \"auto\" }}\r\n        loading={loading}\r\n      >\r\n        <Table.Column\r\n          title=\"Fecha\"\r\n          dataIndex=\"created_at\"\r\n          key=\"created_at\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column\r\n          title=\"Nombre\"\r\n          dataIndex=\"name\"\r\n          key=\"name\"\r\n          sorter={true}\r\n        />\r\n\r\n        <Table.Column\r\n          title=\"Estado\"\r\n          dataIndex=\"state\"\r\n          key=\"state\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column title=\"Acciones\" dataIndex=\"actions\" key=\"actions\" />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React from \"react\";\r\nimport { Table, Input, Tag } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as modalActions from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\nimport \"./history.scss\";\r\n\r\nconst History = (props) => {\r\n  const [content, setContent] = React.useState([]);\r\n  const [timeout, setTimeo] = React.useState(null);\r\n  const filter = useSelector((state) => state.api.filter);\r\n  const pagination = useSelector((state) => state.api.pagination);\r\n  const order = useSelector((state) => state.api.order);\r\n  const count = useSelector((state) => state.api.count);\r\n  const loading = useSelector((state) => state.api.loading);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const updated = useSelector((state) => state.api.updated);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList && updated) {\r\n    const dataListCopy = [...dataList.results];\r\n    let newContent = [];\r\n    dataListCopy.map((doc, key) => {\r\n      const createdAt = new Date(doc.created_at);\r\n      const created_at = `${createdAt.getDate()}/${\r\n        createdAt.getMonth() + 1\r\n      }/${createdAt.getFullYear()}`;\r\n      const cost = doc.additional.cost;\r\n      const name = doc.additional.article;\r\n      const gross = doc.additional.gross;\r\n      const net = doc.additional.net;\r\n      const actions = (\r\n        <div className=\"actionContainer\">\r\n          {doc.status ? (\r\n            <div\r\n              className=\"actionBtn\"\r\n              onClick={() =>\r\n                dispatch(modalActions.modalOpen(10, { id: doc.id, type: 3 }))\r\n              }\r\n            >\r\n              <span>Cancelar venta</span>\r\n              <i className=\"material-icons\">cancel</i>\r\n            </div>\r\n          ) : (\r\n            <Tag color=\"error\">CANCELADA</Tag>\r\n          )}\r\n        </div>\r\n      );\r\n      delete doc.created_at;\r\n      const data = {\r\n        ...doc,\r\n        cost,\r\n        name,\r\n        gross,\r\n        net,\r\n        actions,\r\n        created_at,\r\n      };\r\n      newContent.push(data);\r\n    });\r\n    setContent(newContent);\r\n    dispatch(apiActions.updated());\r\n  }\r\n\r\n  const onSearchChanged = (value) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    setTimeo(\r\n      setTimeout(\r\n        function (value) {\r\n          changeQueryParams(\"search\", value);\r\n        },\r\n        1500,\r\n        value\r\n      )\r\n    );\r\n  };\r\n\r\n  const changeQueryParams = (field, value) => {\r\n    switch (field) {\r\n      case \"search\":\r\n        dispatch(apiActions.updateFilter(value));\r\n        break;\r\n      case \"pagination\":\r\n        dispatch(apiActions.updatePagination(value));\r\n        break;\r\n      case \"order\":\r\n        dispatch(apiActions.updateOrder(value));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(apiActions.getDataList(0, token, 3, filter, pagination, order));\r\n  }, [filter, pagination, order]);\r\n\r\n  const handleTableChange = (paginate, filters, sorter) => {\r\n    if (pagination !== paginate.current) {\r\n      changeQueryParams(\"pagination\", paginate.current);\r\n    } else {\r\n      const order = `${sorter.order === \"descend\" ? \"-\" : \"\"}${sorter.field}`;\r\n      changeQueryParams(\"order\", order);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input.Search onChange={(e) => onSearchChanged(e.target.value)} />\r\n      <Table\r\n        dataSource={content} //Table content>\r\n        rowKey=\"id\"\r\n        onChange={handleTableChange}\r\n        pagination={{ pageSize: 20, total: count }}\r\n        style={{ overflow: \"auto\" }}\r\n        loading={loading}\r\n      >\r\n        <Table.Column\r\n          title=\"Nombre\"\r\n          dataIndex=\"name\"\r\n          key=\"name\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column\r\n          title=\"Cantidad\"\r\n          dataIndex=\"quantity\"\r\n          key=\"sku\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column\r\n          title=\"Fecha\"\r\n          dataIndex=\"created_at\"\r\n          key=\"created_at\"\r\n          sorter={true}\r\n        />\r\n        <Table.Column\r\n          title=\"Costo\"\r\n          dataIndex=\"cost\"\r\n          key=\"cost_price\"\r\n          sorter={false}\r\n        />\r\n        <Table.Column\r\n          title=\"Precio\"\r\n          dataIndex=\"price\"\r\n          key=\"sell_price\"\r\n          sorter={false}\r\n        />\r\n        <Table.Column\r\n          title=\"Ingreso\"\r\n          dataIndex=\"net\"\r\n          key=\"net\"\r\n          sorter={false}\r\n        />\r\n        <Table.Column\r\n          title=\"Ganancia\"\r\n          dataIndex=\"gross\"\r\n          key=\"gross\"\r\n          sorter={false}\r\n        />\r\n        <Table.Column title=\"Acciones\" dataIndex=\"actions\" key=\"actions\" />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\nimport { Table, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as modalActions from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\nimport \"../Table.scss\";\r\n\r\nconst columns = [\r\n  { title: \"Nombre\", dataIndex: \"username\", sorter: true },\r\n  { title: \"Fecha\", dataIndex: \"date_joined\", sorter: true },\r\n  { title: \"Rol\", dataIndex: \"role\" },\r\n  { title: \"Acciones\", dataIndex: \"actions\" },\r\n];\r\n\r\nconst Admin = () => {\r\n  const [content, setContent] = React.useState([]);\r\n  const [timeout, setTimeo] = React.useState(null);\r\n  const filter = useSelector((state) => state.api.filter);\r\n  const pagination = useSelector((state) => state.api.pagination);\r\n  const order = useSelector((state) => state.api.order);\r\n  const count = useSelector((state) => state.api.count);\r\n  const loading = useSelector((state) => state.api.loading);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const updated = useSelector((state) => state.api.updated);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList && updated) {\r\n    const dataListCopy = [...dataList.results];\r\n    let newContent = [];\r\n    dataListCopy.map((doc, key) => {\r\n      const createdAt = new Date(doc.date_joined);\r\n      const date_joined = `${createdAt.getDate()}/${\r\n        createdAt.getMonth() + 1\r\n      }/${createdAt.getFullYear()}`;\r\n      const actions = (\r\n        <div className=\"actionContainer\">\r\n          {doc.is_staff ? null : (\r\n            <div\r\n              className=\"actionBtn\"\r\n              onClick={() =>\r\n                dispatch(modalActions.modalOpen(5, { id: doc.pk, type: 4 }))\r\n              }\r\n            >\r\n              <span>Borrar cuenta</span>\r\n              <i className=\"material-icons\">cancel</i>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n\r\n      delete doc.date_joined;\r\n      const role = doc.is_staff ? \"Admin\" : \"Vendedor\";\r\n      const data = {\r\n        ...doc,\r\n        actions,\r\n        date_joined,\r\n        role,\r\n      };\r\n      newContent.push(data);\r\n    });\r\n    setContent(newContent);\r\n    dispatch(apiActions.updated());\r\n  }\r\n\r\n  const onSearchChanged = (value) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n\r\n    setTimeo(\r\n      setTimeout(\r\n        function (value) {\r\n          changeQueryParams(\"search\", value);\r\n        },\r\n        1500,\r\n        value\r\n      )\r\n    );\r\n  };\r\n\r\n  const changeQueryParams = (field, value) => {\r\n    switch (field) {\r\n      case \"search\":\r\n        dispatch(apiActions.updateFilter(value));\r\n        break;\r\n      case \"pagination\":\r\n        dispatch(apiActions.updatePagination(value));\r\n        break;\r\n      case \"order\":\r\n        dispatch(apiActions.updateOrder(value));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(apiActions.getDataList(0, token, 4, filter, pagination, order));\r\n  }, [filter, pagination, order]);\r\n\r\n  const handleTableChange = (paginate, filters, sorter) => {\r\n    if (pagination !== paginate.current) {\r\n      changeQueryParams(\"pagination\", paginate.current);\r\n    } else {\r\n      const order = `${sorter.order === \"descend\" ? \"-\" : \"\"}${sorter.field}`;\r\n      changeQueryParams(\"order\", order);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input.Search onChange={(e) => onSearchChanged(e.target.value)} />\r\n      <Table\r\n        dataSource={content}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        onChange={handleTableChange}\r\n        pagination={{ pageSize: 20, total: count }}\r\n        style={{ overflow: \"auto\" }}\r\n        loading={loading}\r\n      ></Table>\r\n      <span\r\n        onClick={() => dispatch(modalActions.modalOpen(9))}\r\n        className=\"floatingBtn\"\r\n      >\r\n        +\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Typography, DatePicker, Radio } from \"antd\";\r\nimport { getEarnings, updated } from \"../../store/actions/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  // labels: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Purple\", \"Orange\"],\r\n  // datasets: [\r\n  //   {\r\n  //     label: \"Ganancia\",\r\n  //     data: [12, 19, 3, 5, 2, 3],\r\n  // backgroundColor: [\"rgba(0, 255, 0, 0.2)\"],\r\n  // borderColor: [\"rgba(0, 255, 0, 0.2)\"],\r\n  // borderWidth: 1,\r\n  //   },\r\n  //   {\r\n  //     label: \"Cantidad\",\r\n  //     data: [24, 36, 6, 10, 8, 6],\r\n  // backgroundColor: [\"rgba(0, 0, 255, 0.2)\"],\r\n  // borderColor: [\"rgba(0, 0, 255, 0.2)\"],\r\n  // borderWidth: 1,\r\n  //   },\r\n  // ],\r\n};\r\n\r\nconst Analytics = () => {\r\n  const [dateType, setDateType] = React.useState(\"\");\r\n  const [data, setData] = React.useState({});\r\n  const token = useSelector((state) => state.auth.token);\r\n  const earnings = useSelector((state) => state.api.earnings);\r\n  const isUpdated = useSelector((state) => state.api.updated);\r\n  const dispatch = useDispatch();\r\n\r\n  if (earnings && isUpdated) {\r\n    const newData = {\r\n      labels: earnings.labels,\r\n      datasets: [\r\n        {\r\n          label: \"Ganancias\",\r\n          data: earnings.earnings,\r\n          backgroundColor: [\"rgba(0, 255, 0, 0.2)\"],\r\n          borderColor: [\"rgba(0, 255, 0, 0.2)\"],\r\n          borderWidth: 1,\r\n        },\r\n        {\r\n          label: \"Ingresos\",\r\n          data: earnings.gross,\r\n          backgroundColor: [\"rgba(255, 0, 0, 0.2)\"],\r\n          borderColor: [\"rgba(255, 0, 0, 0.2)\"],\r\n          borderWidth: 1,\r\n        },\r\n        {\r\n          label: \"Cantidad\",\r\n          data: earnings.quantity,\r\n          backgroundColor: [\"rgba(0, 0, 255, 0.2)\"],\r\n          borderColor: [\"rgba(0, 0, 255, 0.2)\"],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n    setData(newData);\r\n    dispatch(updated());\r\n  }\r\n\r\n  const onChangeDate = (date, dateString) => {\r\n    if (dateString[0] && dateString[1]) {\r\n      dispatch(\r\n        getEarnings(token, {\r\n          dateFrom: dateString[0],\r\n          dateTo: dateString[1],\r\n          // dateType,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setDateType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div width=\"100%\">\r\n      <Typography.Title>Analytics</Typography.Title>\r\n      <Typography.Paragraph>\r\n        Aqui podras ver todas las estadisticas de tus negocios. Para generar\r\n        ganancias por favor selecciona un rango de fechas\r\n      </Typography.Paragraph>\r\n      <Typography.Title level={4}>Calcular ganancias</Typography.Title>\r\n      {/* <Radio.Group onChange={onChange} value={dateType}>\r\n        <Radio value=\"\">Dias</Radio>\r\n        <Radio value=\"week\">Semana</Radio>\r\n        <Radio value=\"month\">Meses</Radio>\r\n        <Radio value=\"year\">Año</Radio>\r\n      </Radio.Group> */}\r\n      <DatePicker.RangePicker onChange={onChangeDate} />\r\n      <Line data={data} />\r\n      <p style={{ marginTop: \"2rem\" }}>\r\n        {earnings\r\n          ? `Los ingresos totales fueron de $${earnings.gross_total}, las ganancias fueron $${earnings.earnings_total} de ${earnings.quantity_total} articulos vendidos`\r\n          : null}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form, Input, Button, Spin, message } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport * as actions from \"../../store/actions/auth\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = (props) => {\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const error = useSelector((state) => state.auth.error);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(actions.authLogin(values.username, values.password));\r\n  };\r\n\r\n  if (error) {\r\n    message.error(\"He ocurrido un error, por favor intente de nuevo\", 5);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginForm\">\r\n        <div className=\"loginTitle\" />\r\n        {loading ? (\r\n          <Spin size=\"large\" />\r\n        ) : (\r\n          <Form onFinish={handleSubmit}>\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Por favor ingresa tu usuario!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={\r\n                  <UserOutlined\r\n                    style={{\r\n                      color: \"rgba(0,0,0,.25)\",\r\n                      verticalAlign: \"baseline\",\r\n                    }}\r\n                  />\r\n                }\r\n                placeholder=\"Usuario\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: \"Por favor ingresa tu clave!\" },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={\r\n                  <LockOutlined\r\n                    style={{\r\n                      color: \"rgba(0,0,0,.25)\",\r\n                      verticalAlign: \"baseline\",\r\n                    }}\r\n                  />\r\n                }\r\n                placeholder=\"Contraseña\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item style={{ width: \"100%\" }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                Ingresar\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomLayout from \"./containers/Layout\";\r\nimport Inventory from \"./containers/Inventory/Inventory\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport History from \"./containers/History/History\";\r\nimport Admin from \"./components/Admin/Admin\";\r\nimport Analytics from \"./components/Analytics/Analytics\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\nconst BaseRouter = () => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const admin = useSelector((state) => state.auth.admin);\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <Router>\r\n          <CustomLayout>\r\n            <Route exact path=\"/\" component={Inventory} />\r\n            {admin ? (\r\n              <>\r\n                <Route exact path=\"/admin\" component={Admin} />\r\n                <Route exact path=\"/orders\" component={Orders} />\r\n                <Route exact path=\"/history\" component={History} />\r\n                <Route exact path=\"/analytics\" component={Analytics} />{\" \"}\r\n              </>\r\n            ) : null}\r\n          </CustomLayout>\r\n        </Router>\r\n      ) : (\r\n        <Login />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseRouter;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Upload, message, InputNumber } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\n\r\nconst ArticleForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [file, setFile] = React.useState(null);\r\n  const [data, setData] = React.useState(null);\r\n  const article = useSelector((state) => state.modal.payload);\r\n  const error = useSelector((state) => state.api.error);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n\r\n  const props = {\r\n    beforeUpload(file) {\r\n      setFile(file);\r\n      return false;\r\n    },\r\n  };\r\n\r\n  if (article && !data) {\r\n    let formatedData = { ...dataList.results[article.key] };\r\n    const location = formatedData.location[0].body;\r\n    const optional_location = formatedData.location[1].body;\r\n    delete formatedData.location;\r\n    setData({\r\n      ...formatedData,\r\n      location,\r\n      optional_location,\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    let formData = new FormData();\r\n    if (!values.image) delete values.image;\r\n    for (var key in values) {\r\n      formData.append(key, values[key]);\r\n    }\r\n    if (file) {\r\n      formData.set(\"image\", file, `${encodeURI(values.name)}.png`);\r\n    }\r\n    if (article) {\r\n      //Update\r\n      console.log(\"Update: \", article.id, values, token);\r\n      dispatch(apiActions.updateElement(0, article.id, values, token));\r\n      dispatch(modalClose());\r\n    } else {\r\n      //Create\r\n      dispatch(apiActions.createArticle(formData, token));\r\n      dispatch(modalClose());\r\n    }\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"16px\" }}\r\n      onFinish={handleSubmit}\r\n      layout=\"vertical\"\r\n      initialValues={article && data ? data : null}\r\n    >\r\n      {article ? <h2>Editar articulo</h2> : <h2>Agregar articulo nuevo</h2>}\r\n      <Form.Item\r\n        label=\"Nombre\"\r\n        name=\"name\"\r\n        rules={[\r\n          {\r\n            required: article ? false : true,\r\n            message: \"Por favor ingresa un nombre\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"SKU\"\r\n        name=\"sku\"\r\n        rules={[\r\n          {\r\n            required: article ? false : true,\r\n            message: \"Por favor ingresa un SKU\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Ubicacion\"\r\n        name=\"location\"\r\n        rules={[\r\n          {\r\n            required: article ? false : true,\r\n            message: \"Por favor ingresa una ubicación\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input></Input>\r\n      </Form.Item>\r\n      {article ? (\r\n        <Form.Item label=\"Ubicacion opcional\" name=\"optional_location\">\r\n          <Input></Input>\r\n        </Form.Item>\r\n      ) : null}\r\n      <Form.Item\r\n        label=\"Precio sugerido\"\r\n        name=\"suggested_price\"\r\n        rules={[\r\n          {\r\n            required: article ? false : true,\r\n            message: \"Por favor ingresa un precio\",\r\n          },\r\n        ]}\r\n      >\r\n        <InputNumber\r\n          min={0}\r\n          max={100000}\r\n          step={0.1}\r\n          formatter={(value) =>\r\n            `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          }\r\n          parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n          style={{ width: \"100%\" }}\r\n        ></InputNumber>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Link\" name=\"link\">\r\n        <Input></Input>\r\n      </Form.Item>\r\n\r\n      {article ? null : (\r\n        <Form.Item\r\n          name=\"image\"\r\n          label=\"Image\"\r\n          valuePropName=\"fileList\"\r\n          getValueFromEvent={normFile}\r\n        >\r\n          <Upload {...props} multiple={false}>\r\n            <Button>\r\n              <UploadOutlined /> Click para subir imagen\r\n            </Button>\r\n          </Upload>\r\n        </Form.Item>\r\n      )}\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" block>\r\n          {article ? \"Editar\" : \"Crear\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ArticleForm;\r\n","import React from \"react\";\r\nimport { Form, InputNumber, Button, Switch, Select } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport { createSale, createOrder } from \"../../store/actions/api\";\r\n\r\nconst NewSell = () => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const [maxQuantity, setMaxQuantity] = React.useState(null);\r\n  const [cost, setCost] = React.useState(null);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [quantity, setQuantity] = React.useState(null);\r\n  const [data, setData] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList.results[payload.key] && !data) {\r\n    let formatedData = [];\r\n    dataList.results[payload.key].location.map((item) => {\r\n      formatedData.push({ ...item });\r\n    });\r\n    setData(formatedData);\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    const order = values.switch;\r\n    delete values.switch;\r\n    const location = data[values.location].id;\r\n    delete values.stock;\r\n    const formatedValues = {\r\n      ...values,\r\n      article: payload.id,\r\n      location,\r\n    };\r\n    dispatch(createSale(formatedValues, token));\r\n    if (order) {\r\n      dispatch(\r\n        createOrder(\r\n          {\r\n            article: payload.id,\r\n          },\r\n          token\r\n        )\r\n      );\r\n    }\r\n    dispatch(modalClose());\r\n  };\r\n\r\n  const updateMaxQuantity = (val) => {\r\n    setMaxQuantity(data[val].quantity);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Vender articulo</h2>\r\n      {dataList.results[payload.key] ? (\r\n        <>\r\n          <p>Estas por vender: {dataList.results[payload.key].name}</p>\r\n          <p>\r\n            Stock disponible:{\" \"}\r\n            {maxQuantity ? maxQuantity : dataList.results[payload.key].quantity}\r\n          </p>\r\n          <p>\r\n            Precio sugerido: {dataList.results[payload.key].suggested_price}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n      <Form onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"location\"\r\n          label=\"Ubicacion\"\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Selecciona de que ubicaciones quieres vender!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder=\"Por favor selecciona un stock\"\r\n            onChange={updateMaxQuantity}\r\n          >\r\n            {data\r\n              ? data.map((item, key) => (\r\n                  <Select.Option value={key} key={key}>\r\n                    {item.body} - {item.quantity}\r\n                  </Select.Option>\r\n                ))\r\n              : null}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Cantidad\"\r\n          name=\"quantity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa una cantidad\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            onChange={(e) => setQuantity(e)}\r\n            min={0}\r\n            max={\r\n              dataList.results[payload.key]\r\n                ? parseInt(\r\n                    maxQuantity\r\n                      ? maxQuantity\r\n                      : dataList.results[payload.key].quantity\r\n                  )\r\n                : 5000\r\n            }\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Precio\"\r\n          name=\"price\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa un precio\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            min={0}\r\n            max={100000}\r\n            step={0.1}\r\n            formatter={(value) =>\r\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n            }\r\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form.Item>\r\n        {maxQuantity && maxQuantity === quantity ? (\r\n          <Form.Item name=\"switch\" label=\"Crear pedido\" valuePropName=\"checked\">\r\n            <Switch />\r\n          </Form.Item>\r\n        ) : null}\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Aceptar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewSell;\r\n","import React from \"react\";\r\nimport { Form, InputNumber, Button, Select } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createStock } from \"../../store/actions/api\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\n\r\nconst NewStock = (props) => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [data, setData] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    if (payload) {\r\n      const data = { ...values, article: payload.id };\r\n      dispatch(createStock(data, token));\r\n      dispatch(modalClose());\r\n    }\r\n  };\r\n\r\n  if (dataList.results[payload.key] && !data) {\r\n    setData(dataList.results[payload.key].location);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Agregar Stock</h1>\r\n      <Form onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item\r\n          label=\"Ubicacion\"\r\n          name=\"location\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa una ubicacion\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder=\"Ubicacion\">\r\n            {data\r\n              ? data.map((item, key) => (\r\n                  <Select.Option value={item.id} key={key}>\r\n                    {item.body} - {item.quantity}\r\n                  </Select.Option>\r\n                ))\r\n              : null}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Cantidad\"\r\n          name=\"quantity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa una cantidad\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={0} max={100000} style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Costo\"\r\n          name=\"cost\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa un costo\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            min={0}\r\n            max={100000}\r\n            step={0.1}\r\n            formatter={(value) =>\r\n              `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n            }\r\n            parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Crear\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default NewStock;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst columns = [\r\n  { title: \"Fecha\", dataIndex: \"created_at\" },\r\n  { title: \"Cantidad\", dataIndex: \"quantity\" },\r\n  { title: \"Costo\", dataIndex: \"cost\" },\r\n];\r\n\r\nconst StockList = () => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const [data, setData] = React.useState(null);\r\n\r\n  if (dataList && !data) {\r\n    let formatedData = [];\r\n    dataList.results[payload].stock_list.map((item) => {\r\n      const createdAt = new Date(item.created_at);\r\n      const created_at = `${createdAt.getDate()}/${\r\n        createdAt.getMonth() + 1\r\n      }/${createdAt.getFullYear()}`;\r\n      formatedData.push({ ...item, created_at });\r\n    });\r\n    setData(formatedData);\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Listado de stock</h2>\r\n      <h5>Articulo: {dataList.results[payload].name}</h5>\r\n      <Table size=\"small\" dataSource={data} rowKey=\"id\">\r\n        <Table.Column title=\"Costo\" dataIndex=\"cost\" key=\"cost\" />\r\n        <Table.Column title=\"Cantidad\" dataIndex=\"quantity\" key=\"quantity\" />\r\n        <Table.Column\r\n          title=\"Ubicacion\"\r\n          dataIndex=\"location_name\"\r\n          key=\"location_name\"\r\n        />\r\n        <Table.Column title=\"Fecha\" dataIndex=\"created_at\" key=\"created_at\" />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockList;\r\n","import React from \"react\";\r\nimport { message, Button, Typography } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\n\r\nconst Confirm = (props) => {\r\n  const dispatch = useDispatch();\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const error = useSelector((state) => state.api.error);\r\n\r\n  const deleteArticle = () => {\r\n    const newState =\r\n      payload.type != 4 ? { status: false } : { is_active: false };\r\n    dispatch(\r\n      apiActions.updateElement(payload.type, payload.id, newState, token)\r\n    );\r\n    dispatch(modalClose());\r\n    if (!error) message.success(\"Se ha borrado el articulo exitosamente\", 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Borrar articulo</h2>\r\n      <Typography style={{ marginBottom: \"1rem\" }}>\r\n        ¿Estas seguro que deseas hacer esto?\r\n      </Typography>\r\n      <div>\r\n        <Button onClick={() => dispatch(modalClose())}>Cancelar</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ backgroundColor: \"red\", borderColor: \"#ccc\" }}\r\n          onClick={() => deleteArticle()}\r\n        >\r\n          Confirmar\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Confirm;\r\n","import React from \"react\";\r\nimport { Form, Radio, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport { updateElement } from \"../../store/actions/api\";\r\n\r\nconst UpdateOrder = () => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(updateElement(2, payload.id, values, token));\r\n    dispatch(modalClose());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Cambiar estado de Pedido</h2>\r\n      {payload.name ? (\r\n        <>\r\n          <p>Pedido: {payload.name}</p>\r\n          <p>Estado actual: {payload.state}</p>\r\n        </>\r\n      ) : null}\r\n      <Form onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item name=\"state\">\r\n          <Radio.Group>\r\n            <Radio value=\"BORRADO\">BORRADO</Radio>\r\n            <Radio value=\"PENDIENTE\">PENDIENTE</Radio>\r\n            <Radio value=\"PEDIDO\">PEDIDO</Radio>\r\n            <Radio value=\"LLEGO\">LLEGO</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Aceptar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateOrder;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Switch } from \"antd\";\r\nimport { LockOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport { createUser } from \"../../store/actions/api\";\r\n\r\nconst NewUser = () => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [quantity, setQuantity] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(createUser(values, token));\r\n    dispatch(modalClose());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Crear nueva cuenta</h2>\r\n      <Form onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item\r\n          label=\"Usuario\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa un usuario\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa un email\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Contraseña\"\r\n          name=\"password1\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa una contraseña\",\r\n            },\r\n            {\r\n              min: 8,\r\n              message: \"La contraseña no puede tener menos de 8 caracteres\",\r\n            },\r\n          ]}\r\n          extra=\"La contraseña debe tener mas de 8 caracteres, números y letras\"\r\n        >\r\n          <Input.Password\r\n            prefix={\r\n              <LockOutlined\r\n                style={{\r\n                  color: \"rgba(0,0,0,.25)\",\r\n                  verticalAlign: \"baseline\",\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Repite la contraseña\"\r\n          name=\"password2\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor repite tu contraseña\",\r\n            },\r\n            {\r\n              min: 8,\r\n              message: \"La contraseña no puede tener menos de 8 caracteres\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            prefix={\r\n              <LockOutlined\r\n                style={{\r\n                  color: \"rgba(0,0,0,.25)\",\r\n                  verticalAlign: \"baseline\",\r\n                }}\r\n              />\r\n            }\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Aceptar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import NewArticle from \"./NewArticle\";\r\nimport NewSell from \"./NewSell\";\r\nimport NewStock from \"./NewStock\";\r\nimport ListStock from \"./ListStock\";\r\nimport Confirm from \"./Confirm\";\r\nimport UpdateOrder from \"./UpdateOrder\";\r\nimport NewUser from \"./NewUser\";\r\nimport DeleteSale from \"./DeleteSale\";\r\nimport TransferStock from \"./TransferStock\";\r\nimport Image from \"./Image\";\r\n\r\nconst modalTypes = {\r\n  NewArticle,\r\n  NewSell,\r\n  NewStock,\r\n  ListStock,\r\n  Confirm,\r\n  Image,\r\n  UpdateOrder,\r\n  NewUser,\r\n  DeleteSale,\r\n  TransferStock,\r\n};\r\n\r\nexport default modalTypes;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst Image = () => {\r\n  const payload = useSelector(state => state.modal.payload);\r\n  return (\r\n    <img src={payload} width=\"100%\" height=\"100%\"></img>\r\n  )\r\n}\r\nexport default Image;","import React from \"react\";\r\nimport { message, Button, Typography, Checkbox } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport * as apiActions from \"../../store/actions/api\";\r\n\r\nconst DeleteSale = () => {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const error = useSelector((state) => state.api.error);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteArticle = () => {\r\n    const newState = {\r\n      status: false,\r\n    };\r\n    if (checked) newState.returnStock = true;\r\n    dispatch(\r\n      apiActions.updateElement(payload.type, payload.id, newState, token)\r\n    );\r\n    dispatch(modalClose());\r\n    if (!error) message.success(\"Se ha cancelado la venta exitosamente\", 1);\r\n  };\r\n\r\n  const onChange = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Cancelar venta</h2>\r\n      <Typography style={{ marginBottom: \"1rem\" }}>\r\n        ¿Estas seguro que deseas cancelar esta venta?\r\n      </Typography>\r\n      <Checkbox checked={checked} onChange={onChange}>\r\n        Devolver stock\r\n      </Checkbox>\r\n      <div>\r\n        <Button onClick={() => dispatch(modalClose())}>Cancelar</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{ backgroundColor: \"red\", borderColor: \"#ccc\" }}\r\n          onClick={() => deleteArticle()}\r\n        >\r\n          Continuar\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default DeleteSale;\r\n","import React from \"react\";\r\nimport { Form, InputNumber, Button, Select } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { modalClose } from \"../../store/actions/modal\";\r\nimport { transferStock } from \"../../store/actions/api\";\r\n\r\nconst TransferStock = () => {\r\n  const payload = useSelector((state) => state.modal.payload);\r\n  const dataList = useSelector((state) => state.api.dataList);\r\n  const [maxQuantity, setMaxQuantity] = React.useState(null);\r\n  const [cost, setCost] = React.useState(null);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [quantity, setQuantity] = React.useState(null);\r\n  const [data, setData] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  if (dataList.results[payload.key] && !data) {\r\n    let formatedData = [];\r\n    dataList.results[payload.key].location.map((item) => {\r\n      formatedData.push({ ...item });\r\n    });\r\n    setData(formatedData);\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    const oposite = values.location ? 0 : 1;\r\n    const origin = data[values.location].id;\r\n    const destination = data[oposite].id;\r\n    delete values.location;\r\n    const formatedValues = {\r\n      ...values,\r\n      origin,\r\n      destination,\r\n    };\r\n    console.log(formatedValues);\r\n    dispatch(transferStock(formatedValues, token));\r\n    dispatch(modalClose());\r\n  };\r\n\r\n  const updateMaxQuantity = (val) => {\r\n    setMaxQuantity(data[val].quantity);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Transferir stock</h2>\r\n      <Form onFinish={handleSubmit} layout=\"vertical\">\r\n        <Form.Item\r\n          name=\"location\"\r\n          label=\"Ubicacion de origen\"\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Selecciona desde donde transferir!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder=\"Por favor selecciona un stock\"\r\n            onChange={updateMaxQuantity}\r\n          >\r\n            {data\r\n              ? data.map((item, key) => (\r\n                  <Select.Option value={key} key={key}>\r\n                    {item.body} - {item.quantity}\r\n                  </Select.Option>\r\n                ))\r\n              : null}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Cantidad\"\r\n          name=\"quantity\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Por favor ingresa una cantidad\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            onChange={(e) => setQuantity(e)}\r\n            min={0}\r\n            max={\r\n              dataList.results[payload.key]\r\n                ? parseInt(\r\n                    maxQuantity\r\n                      ? maxQuantity\r\n                      : dataList.results[payload.key].quantity\r\n                  )\r\n                : 5000\r\n            }\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" block>\r\n            Aceptar\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransferStock;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { default as modalTypes } from \"./Articles/\";\r\nimport * as actions from \"../store/actions/modal\";\r\n\r\nconst MODAL_TYPES = {\r\n  1: modalTypes.NewArticle,\r\n  2: modalTypes.NewSell,\r\n  3: modalTypes.NewStock,\r\n  4: modalTypes.ListStock,\r\n  5: modalTypes.Confirm,\r\n  6: modalTypes.Detail,\r\n  7: modalTypes.Image,\r\n  8: modalTypes.UpdateOrder,\r\n  9: modalTypes.NewUser,\r\n  10: modalTypes.DeleteSale,\r\n  11: modalTypes.TransferStock,\r\n};\r\n\r\nconst CustomModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const modalID = useSelector((state) => state.modal.modalID);\r\n  const isOpen = useSelector((state) => state.modal.isOpen);\r\n  const modalTitle = useSelector((state) => state.modal.modalTitle);\r\n  const SelectedModal = MODAL_TYPES[modalID];\r\n\r\n  return (\r\n    <Modal\r\n      style={{ top: 20 }}\r\n      title={modalTitle}\r\n      visible={isOpen}\r\n      onCancel={() => dispatch(actions.modalClose())}\r\n      footer={null}\r\n      okText=\"Aceptar\"\r\n      cancelText=\"Cancelar\"\r\n    >\r\n      {modalID ? <SelectedModal></SelectedModal> : null}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useEffect } from \"react\";\r\nimport BaseRouter from \"./routes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as authActions from \"./store/actions/auth\";\r\nimport * as modalActions from \"./store/actions/modal\";\r\nimport \"./App.css\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authActions.authCheckState());\r\n  });\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <BaseRouter></BaseRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    username: state.auth.username,\r\n    isAdmin: state.auth.admin,\r\n    modalOpen: state.modal.isOpen,\r\n    modalID: state.modal.modalID,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(authActions.authCheckState()),\r\n    onModalClose: () => dispatch(modalActions.modalClose()),\r\n  };\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  }\r\n}","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  error: null,\r\n  loading: false,\r\n  username: null,\r\n  admin: null\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst authSucess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.token,\r\n    error: null,\r\n    loading: false,\r\n    admin: action.is_admin,\r\n    username: action.username\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state, {\r\n    token: null\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCESS:\r\n      return authSucess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  modalID: null,\r\n};\r\n\r\nconst modalOpen = (state, action) => {\r\n  console.log(\"hola \", action);\r\n  return updateObject(state, {\r\n    isOpen: true,\r\n    modalID: action.modalID,\r\n    payload: action.payload,\r\n  });\r\n};\r\nconst modalClose = (state, action) => {\r\n  return updateObject(state, {\r\n    isOpen: false,\r\n    modalID: null,\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.MODAL_OPEN:\r\n      return modalOpen(state, action);\r\n    case actionTypes.MODAL_CLOSE:\r\n      return modalClose(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  title: null,\r\n  selectedTab: 1,\r\n  loading: false,\r\n  error: null,\r\n  dataList: null,\r\n  dataElement: null,\r\n  columns: null,\r\n  updated: true,\r\n  count: 0,\r\n  filter: null,\r\n  pagination: null,\r\n  order: null,\r\n  stockTotal: 0,\r\n  priceTotal: 0,\r\n  earnings: null,\r\n};\r\n\r\nconst toggleSideDrawer = (state, action) => {\r\n  return updateObject(state, {\r\n    sideDrawer: !state.sideDrawer,\r\n  });\r\n};\r\n\r\nconst updateFilter = (state, action) => {\r\n  return updateObject(state, {\r\n    filter: action.filter,\r\n  });\r\n};\r\nconst updatePagination = (state, action) => {\r\n  return updateObject(state, {\r\n    pagination: action.pagination,\r\n  });\r\n};\r\nconst updateOrder = (state, action) => {\r\n  return updateObject(state, {\r\n    order: action.order,\r\n  });\r\n};\r\n\r\nconst apiStart = (state, action) => {\r\n  return updateObject(state, {\r\n    loading: true,\r\n  });\r\n};\r\n\r\nconst apiFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst apiSuccess = (state, action) => {\r\n  const count = action.data.count ? action.data.count : 0;\r\n  return updateObject(state, {\r\n    loading: false,\r\n    error: null,\r\n    dataList: action.data,\r\n    updated: true,\r\n    count,\r\n  });\r\n};\r\n\r\nconst apiUpdated = (state, action) => {\r\n  return updateObject(state, {\r\n    updated: false,\r\n  });\r\n};\r\n\r\nconst apiGetTotals = (state, action) => {\r\n  return updateObject(state, {\r\n    stockTotal: action.stockTotal,\r\n    priceTotal: action.priceTotal,\r\n  });\r\n};\r\n\r\nconst apiGetEarnings = (state, action) => {\r\n  return updateObject(state, {\r\n    earnings: action.earnings,\r\n    updated: true,\r\n  });\r\n};\r\n\r\nconst resetOrderFilter = (state, action) => {\r\n  return updateObject(state, {\r\n    filter: null,\r\n    pagination: null,\r\n    order: null,\r\n  });\r\n};\r\n\r\nconst apiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.API_START:\r\n      return apiStart(state, action);\r\n    case actionTypes.API_SUCCESS:\r\n      return apiSuccess(state, action);\r\n    case actionTypes.API_FAIL:\r\n      return apiFail(state, action);\r\n    case actionTypes.API_UPDATED:\r\n      return apiUpdated(state, action);\r\n    case actionTypes.API_GET_TOTALS:\r\n      return apiGetTotals(state, action);\r\n    case actionTypes.API_GET_EARNINGS:\r\n      return apiGetEarnings(state, action);\r\n    case actionTypes.UPDATE_FILTER:\r\n      return updateFilter(state, action);\r\n    case actionTypes.UPDATE_PAGINATION:\r\n      return updatePagination(state, action);\r\n    case actionTypes.UPDATE_ORDER:\r\n      return updateOrder(state, action);\r\n    case actionTypes.RESET_ORDER_FILTER:\r\n      return resetOrderFilter(state, action);\r\n    case actionTypes.TOGGLE_SIDEDRAWER:\r\n      return toggleSideDrawer(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default apiReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport \"antd/dist/antd.css\";\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nimport authReducer from \"./store/reducers/auth\";\r\nimport modalReducer from \"./store/reducers/modal\";\r\nimport apiReducer from \"./store/reducers/api\";\r\n\r\nconst composeEnhaces = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  modal: modalReducer,\r\n  api: apiReducer,\r\n});\r\nconst store = createStore(rootReducer, composeEnhaces(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}